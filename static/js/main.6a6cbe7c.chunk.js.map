{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","length","map","user","index","SearchBox","searchfield","searchChange","style","paddingBottom","type","placeholder","onChange","Scroll","props","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLocaleLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCOCQ,MAZf,YAAoC,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACtB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKA,UAAU,aAAaC,IAAI,SAASC,IAAG,+BAA0BL,KACtE,gCACI,6BAAKC,IACL,4BAAIC,W,MCgBLI,MArBf,YAA+B,IAAXC,EAAU,EAAVA,OAChB,OAAsB,IAAlBA,EAAOC,OACA,qBAAKL,UAAU,UAAf,sCAGP,qBAAKA,UAAU,gBAAf,SAEQI,EAAOE,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIX,GAAIO,EAAOI,GAAOX,GAClBC,KAAMM,EAAOI,GAAOV,KACpBC,MAAOK,EAAOI,GAAOT,OAHhBS,SCDlBC,MAZf,YAAkD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC9B,OACI,qBAAKC,MAAO,CAAEC,cAAe,QAA7B,SACI,uBACIb,UAAU,mCACVc,KAAK,SACLC,YAAY,mBACZC,SAAUL,OCCXM,MARf,SAAgBC,GACZ,OACI,qBAAKN,MAAO,CAAEO,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,QAArE,SACKH,EAAMI,YC2CJC,G,wDAvCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEhB,YAAae,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACTzB,OAAQ,GACRM,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBoB,MAAM,8CACDxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAK,OAAI,EAAKP,SAAS,CAAEtB,OAAQ6B,S,oBAQ/C,WAAU,IAAD,EAC2BC,KAAKL,MAA7BzB,EADH,EACGA,OAAQM,EADX,EACWA,YACVyB,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,oBAAoBC,SAAS7B,EAAY4B,wBAG/D,OAAyB,IAAlBlC,EAAOC,OACT,qBAAKL,UAAU,kBAAf,SACG,oBAAIA,UAAU,eAAd,0BAEH,sBAAKA,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKV,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ+B,a,GAlCpBK,cCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1B1D,M","file":"static/js/main.6a6cbe7c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './Card.css';\n\nfunction Card({ id, name, email }) {\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5\">\n            <img className=\"robotImage\" alt='robots' src={`https://robohash.org/${id}`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import Card from './Card';\nimport './CardList.css'\n\nfunction CardList({ robots }) {\n    if (robots.length === 0)\n        return <div className=\"noRobot\">No robot could be found.</div>;\n\n    return (\n        <div className=\"cardContainer\">\n            {\n                robots.map((user, index) => {\n                    return (\n                        <Card\n                            key={index}\n                            id={robots[index].id}\n                            name={robots[index].name}\n                            email={robots[index].email}\n                        />)\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","function SearchBox({ searchfield, searchChange }) {\n    return (\n        <div style={{ paddingBottom: '10px' }}>\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\"\n                placeholder=\"search Robots...\"\n                onChange={searchChange}></input>\n        </div>\n    );\n}\n\nexport default SearchBox;","function Scroll(props) {\n    return (\n        <div style={{ overflow: 'scroll', border: '1px solid black', height: '80vh' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\n        });\n\n        return robots.length === 0 ?\n            (<div className=\"vh-100 dt w-100\">\n                <h1 className=\"dtc v-mid tc\">Loading...</h1>\n            </div>) :\n            (<div className=\"tc\">\n                <h1 className=\"f1\">RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll>\n                    <CardList robots={filteredRobots} />\n                </Scroll>\n            </div>);\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}